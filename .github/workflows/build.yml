name: Build Firmware

on:
  push:
    branches: [ github ]
  pull_request:
    branches: [ github ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    
    - name: Build firmware variants
      run: |
        mkdir -p builds/esp8266
        
        # ESP8266 builds
        for lang in pl en; do
          echo "Building ESP8266 $lang variant..."
          pio run -e "lang_$lang"
          
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Beta build
            cp .pio/build/lang_$lang/firmware.bin builds/esp8266/firmware-esp8266-$lang-beta.bin
          else
            # Alfa build
            cp .pio/build/lang_$lang/firmware.bin builds/esp8266/firmware-esp8266-$lang-alfa.bin
          fi
        done

    - name: Commit development builds
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add builds/
        git commit -m "Update development builds" || echo "No changes to commit"
        git push
        
    - name: Create or Update Tag
      run: |
        git tag -f latest
        git push origin latest --force

    - name: Fetch Tags
      run: git fetch --tags

    - name: Debug github.ref
      run: echo "github.ref is ${{ github.ref }}"

    - name: Create Release
      # if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        files: |
          builds/esp8266/firmware-esp8266-*.bin
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
